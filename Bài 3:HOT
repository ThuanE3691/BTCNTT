//Code bài HOT
//
//
//Ý Tưởng:
//Giai thich cach code hoat dong
//Gia su ta co Cay nhu sau :
//            10
//          /    \
//         5       30
//       /   \    /   \
//      4     8  28   42
//
//Ta can tinh chieu cao cua cay.
//Ham High() se dung de quy de tinh
//High(root)
// 1; High(10) = max(High(5),High(30)) + 1;
// 2; High(5) = max(High(4),High(8)) + 1;
// 3: High(4) = 0 + 1 = 1 ( vi root = NULL)
// 4: High(8) = 0 + 1 = 1;
// 5: High(5) = max(1,1) + 1 = 1 + 1 = 2;
// Tuong tu voi High(30) va High(10);
// 6: High(10) = max(2,2) + 1 = 3;
// vay ta co chieu cao cua cay la 3;
//
//Sau đây là code
#include <iostream>
using namespace std;
typedef struct Node{//Tao cau truc cua mot node
    int data;
    Node* left;
    Node* right;
}Tree;

int LeftOf(Tree* root,int value){//Kiem tra gia tri cua value co hop voi quy tac khong
    return value < root->data;
}

int RightOf(Tree* root,int value){
    return value > root->data;
}

Tree* Insert(Tree* root,int value){
	if (root == NULL)//Khi duyen cay toi node cuoi 
	{
		Tree* node = new Tree[sizeof(Tree)];
		node->left = NULL;
		node->right = NULL;
		node->data = value;
		return node;
	}
	if ( LeftOf(root,value))
		root->left = Insert(root->left,value);//Them gia tri vao ben phai root
	if ( RightOf(root,value))
		root->right = Insert(root->right,value);
    return root;
}

void PreOrder(Tree* root)//Duyen tu goc->phai->trai
{
	if (root != NULL)
	{
		cout<<root->data<<" ";
		PreOrder(root->left);
		PreOrder(root->right);
	}
}

int High(Tree* root)
{
	if (root == NULL)
        return 0;
    return max(High(root->left),High(root->right)) + 1;//Chay left && right de duyen het cay
}

int main()
{
	Tree* root;
	root = NULL;
	int n;
	cin>>n;
	for (int i = 0;i < n;i++)
	{
		int value;
		cin>>value;
		root = Insert(root,value);
	}
	cout<<"Duyen theo PreOrder: "<<endl;
	PreOrder(root);
	cout<<endl;
	cout<<"Chieu cao cua cay la : "<<High(root);
}
