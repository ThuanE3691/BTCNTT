Code :
//CODE
//
//
//
//
//Bai Tap Sap Xep Vun Dong
//Bai o web DH nha trang
//Ma bai : SXHEAP

#include <iostream>
using namespace std;
void printHeap(int *arr,int offset,int heapSize)//In ra heap
{
    cout<<"\nHeap size Step: "<<endl;
    for (offset = 0;offset < heapSize;offset++)
    cout<<arr[offset]<<" ";
}
void heapFy(int *arr,int offset,int heapSize)//Sắp xếp các heap
{
	int leftnode,rightnode,largest;
	leftnode = 2*offset;
	rightnode = 2*offset + 1;
	if (leftnode <= heapSize && arr[leftnode] > arr[offset])
		largest = leftnode;
	else
	{
		largest = offset;
	}
	if (arr[rightnode] > arr[largest] && rightnode <= heapSize)
		largest = rightnode;
	if (largest != offset)
	{
		swap(arr[offset],arr[largest]);
		heapFy(arr,largest,heapSize);
	}
}
void createHeap(int *arr,int n)//Tạo heap từ mảng ban đầu
{
	int offset,heapSize;
	heapSize = n-1;

	for ( offset = n/2; offset>=0; offset-- )
    {
		heapFy(arr,offset,heapSize);//Chia đôi các heap và sắp xếp
    }
}
void heapSort(int *arr,int n)//Thuật toán heapSort
{
	createHeap(arr,n);
	int heapSize,offset;
	heapSize = n-1;
	printHeap(arr,offset,heapSize + 1);
	for (offset = heapSize - 1; offset >=0 ; offset--)
	{
		swap(arr[0],arr[heapSize]);
		printHeap(arr,offset,heapSize);//In heap theo giai đoạn i, i = n-1 to 0;
		heapSize--;
		heapFy(arr,0,heapSize);
	}
	cout<<"\nHeap Sort Perfect: "<<endl;
	for (offset = 0;offset < n;offset++)
		cout<<arr[offset]<<" ";
}
int main()
{
	int n;
	cin>>n;
	int *arr = new int [n];
	for (int i = 0;i < n;i++)
		cin>>arr[i];
	heapSort(arr,n);
}
